{"version":3,"sources":["utils/auth.js","components/auth/Signup.js","components/auth/Login.js","components/Home.js","utils/user.js","components/SearchBar.js","components/Search.js","components/NavDrawer.js","utils/connections.js","components/EditProfile.js","components/Profile.js","components/UsersProfile.js","utils/posts.js","components/Dashboard.js","components/Chat.js","App.js","reportWebVitals.js","index.js"],"names":["AuthService","service","axios","create","baseURL","process","withCredentials","this","user","post","username","password","get","Signup","state","email","firstName","lastName","typeOfUser","handleChange","e","target","name","value","setState","handleSubmit","preventDefault","signup","then","response","props","setCurrentUser","data","localStorage","setItem","_id","handleClose","history","push","className","onSubmit","FormControl","style","width","display","justifyContent","TextField","type","label","onChange","Select","marginTop","MenuItem","Button","marginBottom","height","fontSize","variant","color","Component","withRouter","Login","open","modal","alignItems","paper","backgroundColor","handleOpen","handleFormSubmit","login","res","catch","toast","error","to","onClick","textDecoration","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","loggedInUser","classes","makeStyles","theme","root","flexGrow","padding","spacing","textAlign","background","useStyles","backgroundImage","backgroundSize","backgroundRepeat","flexWrap","Grid","container","direction","justify","item","xs","paddingLeft","paddingRight","flexDirection","Typography","Paper","UserService","id","delete","put","SearchBar","search","onChangeHandler","onFilter","Search","users","usersCopy","componentDidMount","getAllUsers","handleSearch","searchName","newUsers","filter","includes","List","map","index","getItem","ListItem","exact","Chip","avatar","Avatar","charAt","React","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerWidth","usersDrawerPaper","drawerContainer","overflow","content","CssBaseline","AppBar","position","Toolbar","Drawer","button","marginRight","Divider","logout","removeItem","anchor","ConnectionService","EditProfile","bio","updateUser","disabled","multiline","rows","rowsMax","placeholder","Profile","connections","pendingConnections","userService","editUser","handleAccept","connection","connectionsService","ConnectionsService","newPending","splice","newConnections","userId","userLoggedInPromise","$push","otherUserPromise","connectionPromise","deleteConnection","Promise","all","values","success","handleDecline","userPromise","getUser","getUserConnections","userConnections","from","promisesUserConnections","forEach","Card","CardContent","border","marginLeft","Fab","aria-label","CardMedia","size","green","red","UsersProfile","status","componentDidUpdate","prevProps","prevState","match","params","getUserDetails","handleConnection","console","log","loggedUser","length","createConnection","newConnection","connectionStatus","PostsService","Dashboard","posts","getAllPosts","loggedInUserId","postsPromise","allPosts","promisesUserPosts","createPost","required","margin","socket","io","connect","Chat","message","chat","onTextChange","onMessageSubmit","emit","on","App","loggedin","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.41718dfc.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nclass AuthService {\r\n\tconstructor() {\r\n\t\tlet service = axios.create({\r\n\t\t\tbaseURL: process.env.REACT_APP_SERVER_API,\r\n\t\t\twithCredentials: true,\r\n\t\t});\r\n\t\tthis.service = service;\r\n\t}\r\n\r\n\tsignup(user) {\r\n\t\treturn this.service.post(\"/signup\", user);\r\n\t}\r\n\r\n\tlogin(username, password) {\r\n\t\treturn this.service.post(\"/login\", { username, password });\r\n\t}\r\n\r\n\tlogout() {\r\n\t\treturn this.service.post(\"/logout\");\r\n\t}\r\n\r\n\tloggedin() {\r\n\t\treturn this.service.get(\"/loggedin\");\r\n\t}\r\n\r\n}\r\n\r\nexport default AuthService;\r\n","import React, { Component } from 'react';\nimport AuthService from '../../utils/auth';\nimport { withRouter } from 'react-router-dom';\nimport { FormControl, Button, TextField, Select, MenuItem } from '@material-ui/core';\nimport './signup.css'\n\nclass Signup extends Component {\n    state = {\n        username: '',\n        password: '',\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        typeOfUser: \"\"\n    }\n\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const authService = new AuthService();\n        authService.signup(this.state)\n            .then((response) => {\n                this.props.setCurrentUser(response.data);\n                //save user id browser local storage\n                localStorage.setItem('loggedInUser', response.data._id);\n                this.props.handleClose();\n                this.props.history.push('/dashboard');\n            })\n        this.setState({\n            username: '',\n            password: '',\n            email: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            typeOfUser: \"\"\n        })\n    }\n\n    render() {\n        return (\n            <div className='signup-container'>\n                <form onSubmit={this.handleSubmit} className='signup-form'>\n                    <FormControl style={{ width: '80%', display: 'flex', justifyContent: 'spaceBetween' }}>\n                        <TextField type=\"text\" label=\"Username\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                        <TextField type=\"password\" label=\"Password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                        <TextField type=\"email\" label=\"Email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                        <TextField type=\"text\" label=\"First Name\" name=\"firstName\" value={this.state.firstName} onChange={this.handleChange} />\n                        <TextField type=\"text\" label=\"Last Name\" name=\"lastName\" value={this.state.lastName} onChange={this.handleChange} />\n                        <Select value={this.state.typeOfUser} onChange={this.handleChange} name=\"typeOfUser\" style={{ marginTop: 10 }}>\n                            <MenuItem value=\"Investor\">Investor</MenuItem>\n                            <MenuItem value=\"Innovator\">Innovator</MenuItem>\n                        </Select>\n                        <Button style={{ marginTop: '10%', marginBottom: '10%', height: 50, fontSize: 18 }} type=\"submit\" variant='contained' color='primary' >Signup</Button>\n                    </FormControl>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Signup);","import React, { Component } from 'react'\nimport AuthService from '../../utils/auth';\nimport { Link, withRouter } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Button, FormControl, TextField, Modal, Fade, Backdrop } from '@material-ui/core';\nimport Signup from './Signup';\nimport './login.css'\n\nclass Login extends Component {\n    state = {\n        username: '',\n        password: '',\n        open: false\n    }\n\n    modal = {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n\n    paper = {\n        backgroundColor: \"lightblue\",\n        width: '40vw',\n        height: '60vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    }\n    handleOpen = () => {\n        this.setState({\n            open: true\n        })\n    };\n\n    handleClose = () => {\n        this.setState({\n            open: false\n        })\n    };\n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        const { username, password } = this.state;\n        const authService = new AuthService();\n        authService.login(username, password)\n            .then((res) => {\n                let user = res.data;\n                this.props.setCurrentUser(user);\n                //save user id browser local storage\n                localStorage.setItem('loggedInUser', user._id);\n                this.props.history.push('/dashboard');\n            })\n            .catch(() => {\n                toast.error('Invalid Login')\n            })\n    }\n\n    render() {\n        return (\n            <div className='login-container'>\n                <form onSubmit={this.handleFormSubmit} className='form-container'>\n                    <FormControl style={{ width: '16vw' }}>\n                        <TextField style={{ marginBottom: 30 }} color=\"primary\" type=\"text\" name=\"username\" label='Username' value={this.state.username} onChange={this.handleChange} />\n                        <TextField color=\"primary\" type=\"password\" name=\"password\" label='Password' value={this.state.password} onChange={this.handleChange} />\n                        <Button type=\"submit\" color='primary' variant=\"contained\" style={{ marginTop: 50, height: 45, fontSize: 18 }}>Login</Button>\n                    </FormControl>\n                </form>\n                <div>\n                    <p style={{ fontSize: 20, marginTop: -50 }}>Don't have account?\n                        <Link to={\"/\"} onClick={this.handleOpen} style={{ textDecoration: 'none', color: 'blue' }}> Signup</Link>\n                        <Modal\n                            aria-labelledby=\"transition-modal-title\"\n                            style={this.modal}\n                            aria-describedby=\"transition-modal-description\"\n                            open={this.state.open}\n                            onClose={this.handleClose}\n                            closeAfterTransition\n                            BackdropComponent={Backdrop}\n                            BackdropProps={{\n                                timeout: 500,\n                            }}\n                        >\n                            <Fade in={this.state.open}>\n                                <div style={this.paper}>\n                                    <Signup loggedInUser={this.props.loggedInUser} setCurrentUser={this.props.setCurrentUser} handleClose={this.handleClose} />\n                                </div>\n                            </Fade>\n                        </Modal>\n                    </p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Login);\n","import React from 'react';\nimport Login from './auth/Login';\nimport \"../index.css\";\nimport { Grid, Paper, makeStyles, Typography } from '@material-ui/core';\nimport './home.css';\nimport { withRouter } from 'react-router-dom';\n\nconst Home = (props) => {\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(2),\n            textAlign: 'center',\n            background: \"lightBlue\",\n            width: theme.spacing(100),\n            height: theme.spacing(100),\n            marginTop: theme.spacing(0.5),\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <div style={{ backgroundImage: \"url('../images/home-background.jpg')\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\", flexWrap: 'wrap' }} className='home-container'>\n            <Grid container spacing={0}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item xs={6} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                    <div className=\"wrapper\" style={{ display: 'flex', alignItems: 'left', justifyContent: 'space-around', flexDirection: 'column' }}>\n                        <div className=\"one\" style={{ paddingLeft: 10, marginTop: 20 }}>\n                            <Typography variant='h3'>Investor</Typography>\n                            <Typography variant='h5'>As an investor, find projects and people you are willing to take a chance on!</Typography>\n                        </div>\n                        <div className=\"two\" style={{ paddingLeft: 10, marginTop: 20 }}>\n                            <Typography variant='h3'>Innovator</Typography>\n                            <Typography variant='h5'>As a creator, put your idea out there so that your dream can come through with the help of investors!</Typography>\n                        </div>\n                    </div>\n                </Grid>\n                <Grid item xs={6} style={{ display: 'flex' }}>\n                    <Paper className={classes.paper}>\n                        <Login loggedInUser={props.loggedInUser} setCurrentUser={props.setCurrentUser} />\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withRouter(Home);\n","import axios from \"axios\";\n\nclass UserService {\n    constructor() {\n        let service = axios.create({\n            baseURL: process.env.REACT_APP_SERVER_API,\n            withCredentials: true\n        });\n        this.service = service\n    }\n\n    getAllUsers() {\n        return this.service.get('/users');\n    }\n\n    getUser(id) {\n        return this.service.get(`/users/${id}`);\n    }\n\n    deleteUser(id) {\n        return this.service.delete(`/users/${id}`)\n    }\n\n    editUser(id, user) {\n        return this.service.put(`/users/${id}`, user)\n    }\n\n}\n\nexport default UserService;\n","import React, { Component } from 'react'\nimport { TextField } from '@material-ui/core';\n\nclass SearchBar extends Component {\n    state = {\n        search: '',\n    }\n\n    onChangeHandler = (e) => {\n        this.setState({\n            search: e.target.value\n        }, () => {\n            this.props.onFilter(this.state.search);\n        })\n    }\n\n    render() {\n        return (\n            <form>\n                <TextField label='Search' variant='standard' type=\"text\" name=\"name\" value={this.search} onChange={this.onChangeHandler} />\n            </form>\n        );\n    }\n}\n\nexport default SearchBar;\n","import React from \"react\"\nimport UserService from '../utils/user';\nimport SearchBar from \"./SearchBar\"\nimport { NavLink } from \"react-router-dom\"\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport { List, ListItem } from \"@material-ui/core\";\n\nclass Search extends React.Component {\n\n    state = {\n        users: [],\n        usersCopy: [],\n    }\n\n    componentDidMount = () => {\n        const userService = new UserService()\n        userService.getAllUsers()\n            .then((users) => {\n                this.setState({\n                    users: users.data,\n                    usersCopy: users.data\n\n                })\n            })\n    }\n\n    handleSearch = (searchName) => {\n        let newUsers = this.state.users.filter(user => {\n            return user.username.includes(searchName)\n        })\n        this.setState({\n            usersCopy: newUsers\n        })\n    }\n\n    render() {\n        return (\n            <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column', marginTop: 5, width: '100%' }}>\n                <SearchBar onFilter={this.handleSearch} />\n                <List style={{ display: 'flex', alignItems: 'left', justifyContent: 'left', flexDirection: 'column', width: '100%' }}>\n                    {this.state.usersCopy.map((user, index) => {\n                        if (user._id !== localStorage.getItem(\"loggedInUser\")) {\n                            return (\n                                <ListItem key={index} >\n                                    <NavLink exact to={`/profile/${user._id}`} style={{ width: '100%', textDecoration: 'none', height: 35 }}>\n                                        <Chip avatar={<Avatar style={{ height: 25, width: 25, backgroundColor: '#7ED5EA', fontSize: 17, color: 'white' }}>{user.username.charAt(0)}</Avatar>}\n                                            label={user.username}\n                                            style={{ width: '100%', display: 'flex', alignItems: 'left', justifyContent: 'left', height: 35 }}  //</NavLink>'#ABE5E8'\n                                        ></Chip>\n                                    </NavLink>\n                                </ListItem>\n                            )\n                        } else {\n                            return null\n                        }\n                    })}\n                </List>\n            </div>\n        )\n    }\n}\n\nexport default Search\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport MailIcon from '@material-ui/icons/Mail';\nimport AuthService from '../utils/auth';\nimport Switch from '@material-ui/core/Switch';\nimport Search from './Search';\n\nconst drawerWidth = 180;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth + 10,\n    },\n    usersDrawerPaper: {\n        width: drawerWidth + 50,\n    },\n    drawerContainer: {\n        overflow: 'auto',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\nconst NavDrawer = props => {\n\n    const logoutUser = () => {\n        const authService = new AuthService();\n        authService.logout()\n            .then(() => {\n                props.setCurrentUser(null);\n                localStorage.removeItem('loggedInUser');\n                props.history.push('/');\n            })\n    }\n\n    let classes = useStyles();\n\n    if (props.loggedInUser !== null) {\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar position=\"fixed\" className={classes.appBar} style={{ backgroundColor: '#63BCE5' }}>\n                    <Toolbar style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                        <Typography variant=\"h6\" >App</Typography>\n                        <Typography variant='h6' > Hey {props.loggedInUser.username} 👋</Typography>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <Toolbar />\n                    <div className={classes.drawerContainer}>\n                        <List>\n                            <ListItem button>\n                                <NavLink\n                                    style={{ height: '100%', width: '100%', textDecoration: 'none', color: 'black', fontSize: 18 }}\n                                    exact to=\"/dashboard\">\n                                    Home\n                                </NavLink>\n                                <HomeIcon style={{ marginRight: '7%' }} />\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <NavLink\n                                    style={{ width: '100%', textDecoration: 'none', color: 'black', fontSize: 18 }}\n                                    exact to=\"/profile\">\n                                    Profile\n                                </NavLink>\n                                <PersonIcon style={{ marginRight: '7%' }} />\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <NavLink\n                                    style={{ width: '100%', textDecoration: 'none', color: 'black', fontSize: 18 }}\n                                    exact to=\"/chat\">Chat</NavLink>\n                                <MailIcon style={{ marginRight: '7%' }} />\n                            </ListItem>\n                            <Divider />\n                            <ListItem button onClick={logoutUser}>\n                                <NavLink\n                                    style={{ width: '100%', textDecoration: 'none', color: 'black', fontSize: 18 }}\n                                    exact to=\"/\">\n                                    Logout\n                                </NavLink>\n                                <ExitToAppIcon style={{ marginRight: '7%' }} />\n                            </ListItem>\n                            <Divider />\n                        </List>\n                    </div>\n                </Drawer>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    anchor=\"right\"\n                    classes={{\n                        paper: classes.usersDrawerPaper,\n                    }}\n                >\n                    <Toolbar />\n                    <div className={classes.drawerContainer}>\n                        <List>\n                            <ListItem>\n                                <Search />\n                            </ListItem>\n                        </List>\n                    </div>\n                </Drawer>\n                <main className={classes.content}>\n                    <Toolbar />\n                </main>\n            </div>\n        );\n    } else {\n        return null\n    }\n}\n\nexport default withRouter(NavDrawer);\n","import axios from \"axios\";\n\nclass ConnectionService {\n    constructor() {\n        let service = axios.create({\n            baseURL: process.env.REACT_APP_SERVER_API,\n            withCredentials: true\n        });\n        this.service = service;\n    }\n\n    createConnection(to) {\n        return this.service.post(`/connections/${to}`);\n    }\n\n    deleteConnection(id) {\n        return this.service.delete(`/connections/${id}`);\n    }\n\n    getUserConnections() {\n        return this.service.get('/connections/user');\n    }\n\n}\n\nexport default ConnectionService;\n","import React, { Component } from 'react'\nimport { FormControl, Button, TextField } from '@material-ui/core';\n\nclass EditProfile extends Component {\n    state = {\n        username: \"\",\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        bio: \"\",\n        typeOfUser: \"\",\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            username: this.props.loggedInUser.username,\n            email: this.props.loggedInUser.email,\n            firstName: this.props.loggedInUser.firstName,\n            lastName: this.props.loggedInUser.lastName,\n            bio: this.props.loggedInUser.bio,\n            typeOfUser: this.props.loggedInUser.typeOfUser\n        })\n    }\n\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        this.props.updateUser(this.state)\n        this.props.handleClose();\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleFormSubmit} className='signup-form'>\n                <FormControl style={{ width: '80%', display: 'flex', justifyContent: 'spaceBetween' }}>\n                    <TextField type=\"text\" label=\"Username\" name=\"username\" value={this.state.username} disabled />\n                    <TextField type=\"email\" label=\"Email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                    <TextField type=\"text\" label=\"First Name\" name=\"firstName\" value={this.state.firstName} onChange={this.handleChange} />\n                    <TextField type=\"text\" label=\"Last Name\" name=\"lastName\" value={this.state.lastName} onChange={this.handleChange} />\n                    <TextField type=\"textarea\" label=\"Bio\" name=\"bio\" value={this.state.bio} onChange={this.handleChange}\n                        multiline\n                        rows={2}\n                        rowsMax={4} />\n                    <TextField placeholder={this.state.typeOfUser} name=\"typeOfUser\" style={{ marginTop: 10 }} disabled />\n                    <Button style={{ marginTop: '10%', marginBottom: '10%', height: 50, fontSize: 18 }} type=\"submit\" variant='contained' color='primary'>Save</Button>\n                </FormControl>\n            </form>\n        );\n    }\n}\n\nexport default EditProfile;\n","import React, { Component } from \"react\";\nimport UserService from \"../utils/user\";\nimport ConnectionsService from \"../utils/connections\";\nimport { toast } from 'react-toastify';\nimport { Button, Avatar, Typography, Fab, Fade, Modal, Backdrop } from '@material-ui/core';\nimport { green, red } from '@material-ui/core/colors';\nimport './profile.css';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EditProfile from \"./EditProfile\";\n\nclass Profile extends Component {\n    state = {\n        username: \"\",\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        bio: \"\",\n        typeOfUser: \"\",\n        connections: [],\n        pendingConnections: [],\n        open: false\n    };\n\n    modal = {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n\n    paper = {\n        backgroundColor: \"lightblue\",\n        width: '40vw',\n        height: '60vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n\n    userService = new UserService();\n\n    componentDidMount() {\n        const id = localStorage.getItem(\"loggedInUser\");\n        let userPromise = this.userService.getUser(id);\n        const connectionsService = new ConnectionsService();\n        let connectionPromise = connectionsService.getUserConnections();\n        Promise.all([userPromise, connectionPromise]).then((values) => {\n            let {\n                username,\n                email,\n                firstName,\n                lastName,\n                bio,\n                typeOfUser,\n                connections,\n            } = values[0].data;\n\n            let userConnections = values[1].data.map((connection) => {\n                if (connection.from === id) {\n                    return { user: connection.to, id: connection._id, from: true };\n                } else {\n                    return { user: connection.from, id: connection._id, from: false };\n                }\n            });\n\n            const promisesUserConnections = [];\n            userConnections.forEach((connection) => {\n                promisesUserConnections.push(this.userService.getUser(connection.user))\n            });\n\n            Promise.all(promisesUserConnections).then((response) => {\n                response.forEach((user, index) => {\n                    userConnections[index].user = user.data.username;\n                    userConnections[index].userId = user.data._id;\n                    userConnections[index].connections = user.data.connections;\n                });\n\n                this.setState({\n                    username: username,\n                    email: email,\n                    firstName: firstName,\n                    lastName: lastName,\n                    bio: bio,\n                    typeOfUser: typeOfUser,\n                    connections: connections,\n                    pendingConnections: userConnections,\n                });\n            });\n        });\n    }\n\n    updateUser = (user) => {\n        this.userService.editUser(localStorage.getItem(\"loggedInUser\"), user)\n            .then((response) => {\n                let user = response.data\n                this.setState({\n                    username: user.username,\n                    email: user.email,\n                    firstName: user.firstName,\n                    lastName: user.lastName,\n                    bio: user.bio,\n                    typeOfUser: user.typeOfUser,\n                })\n            })\n    }\n\n    handleAccept = (id, connection, index) => {\n\n        const loggedInUser = localStorage.getItem(\"loggedInUser\")\n        connection.connections.push(loggedInUser)\n\n        const connectionsService = new ConnectionsService();\n\n        let newPending = [...this.state.pendingConnections];\n        newPending.splice(index, 1)\n\n        let newConnections = [...this.state.connections];\n        newConnections.push(connection.userId)\n\n        let userLoggedInPromise = this.userService.editUser(loggedInUser, { $push: { connections: connection.userId } })\n        let otherUserPromise = this.userService.editUser(connection.userId, { $push: { connections: loggedInUser } })\n        let connectionPromise = connectionsService.deleteConnection(id)\n\n        Promise.all([userLoggedInPromise, otherUserPromise, connectionPromise]).then((values) => {\n            this.setState({\n                connections: newConnections,\n                pendingConnections: newPending\n            })\n            toast.success(\"Connection accepted!\")\n        })\n    }\n\n    handleDecline = (id, index) => {\n        const connectionsService = new ConnectionsService();\n\n        let newPending = [...this.state.pendingConnections]\n        newPending.splice(index, 1)\n\n        this.setState({\n            pendingConnections: newPending\n        })\n\n        connectionsService.deleteConnection(id)\n            .then(() => {\n                toast.success(\"Connection rejected!\")\n            })\n    }\n\n    handleOpen = () => {\n        this.setState({\n            open: true\n        })\n    };\n\n    handleClose = () => {\n        this.setState({\n            open: false\n        })\n    };\n\n    render() {\n        return (\n            <div className='profile-container'>\n                <Card >\n                    <CardContent className='profile-section'>\n                        <div className='avatar-section'>\n                            <Avatar style={{ height: 100, width: 100 }} />\n                            <Typography variant='h4' style={{ marginTop: '20%', color: 'rgba(9, 161, 245)' }}>{this.state.username}</Typography>\n                        </div>\n                        <hr style={{ width: 1, height: '100%', backgroundColor: 'lightgrey', border: 'none', marginRight: 10, marginLeft: -45 }} />\n                        <div className='info-section'>\n                            <Typography style={{ color: '#4B9FE1' }}>Name:</Typography>\n                            <Typography>{this.state.firstName} {this.state.lastName}</Typography>\n                            <Typography style={{ color: '#4B9FE1' }}>Email:</Typography>\n                            <Typography>{this.state.email}</Typography>\n                            <Typography style={{ color: '#4B9FE1' }}>I'm an:</Typography>\n                            <Typography>{this.state.typeOfUser}</Typography>\n                            <Typography style={{ color: '#4B9FE1' }}>Biography:</Typography>\n                            <Typography>{this.state.bio}</Typography>\n                        </div>\n                        <div>\n                            <Modal\n                                aria-labelledby=\"transition-modal-title\"\n                                style={this.modal}\n                                aria-describedby=\"transition-modal-description\"\n                                open={this.state.open}\n                                onClose={this.handleClose}\n                                closeAfterTransition\n                                BackdropComponent={Backdrop}\n                                BackdropProps={{\n                                    timeout: 500,\n                                }}\n                            >\n                                <Fade in={this.state.open}>\n                                    <div style={this.paper}>\n                                        <EditProfile updateUser={this.updateUser} handleClose={this.handleClose} loggedInUser={this.state} />\n                                    </div>\n                                </Fade>\n                            </Modal>\n                            <Fab color='default' aria-label=\"edit\" onClick={this.handleOpen}>\n                                <EditIcon />\n                            </Fab>\n                        </div>\n                    </CardContent>\n                    <Card >\n                        <CardContent>\n                            <Typography variant='h6'>Pending requests:</Typography>\n                            {this.state.pendingConnections.map((connection, index) => {\n                                if (connection.from) {\n                                    return (\n                                        <div key={{ index }}>\n                                            <Card key={connection.id} style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around', marginTop: '3%', alignItems: 'center', height: 50 }}>\n                                                <Typography variant='body1'>Sent to:</Typography>\n                                                <Typography variant='body1' style={{ fontSize: 15 }}>{connection.user}</Typography>\n                                                <CardMedia><Avatar style={{ backgroundColor: 'rgba(9, 161, 245)' }}>{connection.user.charAt(0)}</Avatar></CardMedia>\n                                            </Card>\n                                        </div>\n                                    )\n                                } else {\n                                    return (\n                                        <Card key={connection.id} style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', marginTop: '3%', alignItems: 'center', height: 50 }}>\n                                            <Typography variant='body1'>From:</Typography>\n                                            <CardMedia><Avatar /></CardMedia>\n                                            <Typography variant='body1' style={{ fontSize: 15 }}>{connection.user}</Typography>\n                                            <div style={{ display: 'flex', flexDirection: 'row' }}>\n                                                <Button size='small' variant='contained' style={{ backgroundColor: green[500], color: 'white', marginRight: 20 }} onClick={() => this.handleAccept(connection.id, connection, index)}><CheckCircleIcon /></Button>\n                                                <Button size='small' variant='contained' style={{ backgroundColor: red[500], color: 'white' }} onClick={() => this.handleDecline(connection.id, index)}><ClearIcon /></Button>\n                                            </div>\n                                        </Card>\n                                    )\n                                }\n\n                            })\n                            }\n                        </CardContent>\n                    </Card>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Profile;\n","import React, { Component } from 'react'\nimport UserService from '../utils/user'\nimport ConnectionsService from '../utils/connections'\nimport { withRouter } from 'react-router-dom'\nimport { toast } from 'react-toastify';\nimport { Button, Avatar, Typography } from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport './profile.css'\n\nclass UsersProfile extends Component {\n    state = {\n        username: \"\",\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        bio: \"\",\n        typeOfUser: \"\",\n        connections: [],\n        id: \"\",\n        status: \"\"\n    };\n\n    getUserDetails() {\n        const id = this.props.match.params.id;\n        if (id === localStorage.getItem(\"loggedInUser\")) {\n            this.props.history.push(\"/profile\")\n        }\n        let connectionStatus = \"\";\n        const userService = new UserService();\n        userService.getUser(id)\n            .then((user) => {\n                const connectionsService = new ConnectionsService()\n                connectionsService.getUserConnections()\n                    .then((connections) => {\n                        let userConnections = connections.data.filter((connection) => {\n                            return ((connection.from === id &&\n                                connection.to === localStorage.getItem(\"loggedInUser\")) ||\n                                (connection.to === id &&\n                                    connection.from === localStorage.getItem(\"loggedInUser\")\n                                )\n                            );\n                        })\n                        if (userConnections.length > 0) {\n                            connectionStatus = \"pending\"\n                        }\n                        if (user.data.connections.includes(localStorage.getItem(\"loggedInUser\")) && connectionStatus !== \"pending\") {\n                            connectionStatus = \"connected\"\n                        } else if (!user.data.connections.includes(localStorage.getItem(\"loggedInUser\")) && connectionStatus !== \"pending\") {\n                            connectionStatus = \"notConnected\"\n                        }\n                        console.log(connectionStatus)\n                        this.setState({\n                            username: user.data.username,\n                            email: user.data.email,\n                            firstName: user.data.firstName,\n                            lastName: user.data.lastName,\n                            bio: user.data.bio,\n                            typeOfUser: user.data.typeOfUser,\n                            connections: user.data.connections,\n                            id: user.data._id,\n                            status: connectionStatus\n                        })\n                    })\n            })\n    }\n\n\n    componentDidMount() {\n        this.getUserDetails()\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        if (prevProps.match.params.id !== this.props.match.params.id) {\n            this.getUserDetails()\n        }\n    }\n\n    handleConnection = (id) => {\n        console.log(id)\n        let loggedUser = localStorage.getItem(\"loggedInUser\")\n        const connectionsService = new ConnectionsService()\n        connectionsService.getUserConnections()\n            .then((connections) => {\n                let userConnections = connections.data.filter((connection) => {\n                    return ((connection.from === id &&\n                        connection.to === loggedUser) ||\n                        (connection.to === id &&\n                            connection.from === loggedUser)\n                    )\n                });\n                if (!userConnections.length) {\n                    connectionsService.createConnection(id)\n                        .then((newConnection) => {\n                            toast.success(\"Connection Requested\")\n                            this.setState({\n                                status: 'pending'\n                            })\n                            return\n                        })\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div className='profile-container'>\n                <Card>\n                    <CardContent className='profile-section'>\n                        <div className='avatar-section'>\n                            <Avatar style={{ backgroundColor: 'rgba(9, 161, 245)', height: 100, width: 100, fontSize: 55 }}>{this.state.username.charAt(0)}</Avatar>\n                            <Typography variant='h4' style={{ marginTop: '20%', color: 'rgba(9, 161, 245)' }}>{this.state.username}</Typography>\n                        </div>\n                        <div className='info-section'>\n                            <Typography style={{ color: '#4B9FE1' }}>Name:</Typography>\n                            <Typography>{this.state.firstName} {this.state.lastName}</Typography>\n                            <Typography style={{ color: '#4B9FE1' }}>Email:</Typography>\n                            <Typography>{this.state.email}</Typography>\n                            <Typography style={{ color: '#4B9FE1' }}>I'm an:</Typography>\n                            <Typography>{this.state.typeOfUser}</Typography>\n                            <Typography style={{ color: '#4B9FE1' }}>Biography:</Typography>\n                            <Typography>{this.state.bio}</Typography>\n                            {\n                                this.state.status === 'connected' ? <Button disabled variant='contained' style={{ backgroundColor: green[500], color: 'white', width: '52%' }}>Connected &#129309;</Button> :\n                                    this.state.status === 'pending' ? <Button disabled variant='contained' style={{ width: '50%', backgroundColor: 'lightgrey', color: 'black' }}>Pending &#8987;</Button> :\n                                        <Button size='small' variant='contained' style={{ backgroundColor: green[500], color: 'white', width: '50%' }} onClick={() => this.handleConnection(this.state.id)}>Connect <CheckCircleIcon /></Button>\n                            }\n                        </div>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(UsersProfile);","import axios from \"axios\";\n\nclass PostsService {\n    constructor() {\n        let service = axios.create({\n            baseURL: process.env.REACT_APP_SERVER_API,\n            withCredentials: true\n\n        });\n        this.service = service\n    }\n\n    getAllPosts() {\n        return this.service.get(\"/posts\");\n    }\n\n    getPost(id) {\n        return this.service.get(`/posts/${id}`);\n    }\n\n    getPostsByOwner(id) {\n        return this.service.get(`/posts/owner/${id}`);\n    }\n\n    createPost(content) {\n        return this.service.post(\"/posts\", content);\n    }\n\n    editPost(content, id) {\n        return this.service.put(`/posts/${id}`, content);\n    }\n\n    deletePost(id) {\n        return this.service.delete(`/posts/delete/${id}`);\n    }\n\n}\n\nexport default PostsService;\n","import React from 'react';\nimport PostsService from '../utils/posts'\nimport { toast } from 'react-toastify';\nimport UserService from '../utils/user';\nimport { TextField, Typography, Fab, Avatar } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport AddIcon from '@material-ui/icons/Add';\nimport './post.css';\n\n\nclass Dashboard extends React.Component {\n    state = {\n        content: \"\",\n        posts: [],\n        username: \"\",\n        connections: []\n    }\n\n\n    getAllPosts = () => {\n        const loggedInUserId = this.props.loggedInUser\n        const postsService = new PostsService();\n        const postsPromise = postsService.getAllPosts();\n\n        const userService = new UserService()\n        let userPromise = userService.getUser(loggedInUserId);\n\n        Promise.all([userPromise, postsPromise]).then((values) => {\n            let {\n                username,\n                connections,\n            } = values[0].data;\n            let allPosts = values[1].data;\n\n            const promisesUserPosts = [];\n            allPosts.forEach((post) => {\n                promisesUserPosts.push(userService.getUser(post.user))\n            });\n\n            Promise.all(promisesUserPosts).then((response) => {\n                response.forEach((user, index) => {\n                    allPosts[index].username = user.data.username;\n                });\n\n                this.setState({\n                    username: username,\n                    connections: connections,\n                    posts: allPosts,\n                });\n\n            })\n        })\n    }\n\n    componentDidMount = () => {\n        this.getAllPosts()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.content === this.state.content) {\n            return;\n        } else {\n            this.getAllPosts();\n        }\n    }\n\n    handleChange = (e) => {\n        let { name, value } = e.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        let postService = new PostsService();\n        postService.createPost(this.state).then(() => {\n            this.setState({\n                content: ''\n            })\n            toast.success('Post created!')\n        });\n    }\n\n    render() {\n        return (\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\n                <Card style={{ width: '40%', marginBottom: 40 }}>\n                    <CardContent >\n                        <form style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-evenly' }}>\n                            <TextField label=\"Post\" multiline rows={2} variant='outlined' type=\"text\" name=\"content\" style={{ width: '70%' }}\n                                value={this.state.content}\n                                onChange={this.handleChange}\n                                required\n                            />\n                            <Fab onClick={this.handleFormSubmit} style={{ backgroundColor: '#4B9FE1' }} aria-label=\"add\">\n                                <AddIcon style={{ color: 'white' }} />\n                            </Fab>\n\n                        </form>\n                    </CardContent>\n                </Card>\n                <hr />\n                <div style={{ width: '40%', marginBottom: 40 }}>\n                    {this.state.posts.map((post, index) => {\n                        if (this.state.connections.includes(post.user) || post.user === localStorage.getItem(\"loggedInUser\") || !this.state.connections.length) {\n                            return (\n                                <Card style={{ marginBottom: 30 }} key={index}>\n                                    <CardContent className='post-section'>\n                                        <div className='post-avatar-section'>\n                                            <Avatar style={{ backgroundColor: '#63BCE5', height: 70, width: 70, fontSize: 55 }}>{post.username.charAt(0)}</Avatar>\n                                            <Typography variant='h5' style={{ marginTop: '10%' }}>{post.username}</Typography>\n                                        </div>\n                                        <hr style={{ width: 1, height: '100%', backgroundColor: 'lightgrey', border: 'none', marginRight: 15, marginLeft: -25 }} />\n                                        <div className='content-section'>\n                                            <Typography style={{ height: 20, margin: 0, padding: 0 }}>{post.content}</Typography>\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            )\n                        } else {\n                            return null;\n                        }\n                    })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Dashboard;\n","import React from 'react'\nimport io from 'socket.io-client'\nimport TextField from '@material-ui/core/TextField'\nimport { Button, Card } from '@material-ui/core'\n\nconst socket = io.connect(process.env.REACT_APP_SOCKET, {\n    withCredentials: true,\n})\n\nclass Chat extends React.Component {\n    state = {\n        message: '',\n        name: '',\n        chat: []\n    }\n\n    componentDidMount() {\n        socket.on('message', ({ name, message }) => {\n            this.setState({\n                chat: [...this.state.chat, { name, message }]\n            })\n        })\n    }\n\n    onTextChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    onMessageSubmit = e => {\n        e.preventDefault();\n        const { name, message } = this.state\n        socket.emit('message', { name, message })\n        this.setState({\n            message: '',\n            name\n        })\n    }\n\n    render() {\n        return (\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\n                <form onSubmit={this.onMessageSubmit}>\n                    <div>\n                        <TextField\n                            name=\"name\"\n                            onChange={e => this.onTextChange(e)}\n                            value={this.state.name}\n                            label=\"Name\"\n                        />\n                    </div>\n                    <div>\n                        <TextField\n                            name=\"message\"\n                            onChange={e => this.onTextChange(e)}\n                            value={this.state.message}\n                            id=\"outlined-multiline-static\"\n                            variant=\"standard\"\n                            label=\"Message\"\n                        />\n                    </div>\n                    <Button variant='outlined' color='primary' type='submit'>Send</Button>\n                </form>\n                <div style={{ display: 'flex', alignItems: 'left', justifyContent: 'left', flexDirection: 'column' }}>\n                    <h1>Chat</h1>\n                    {this.state.chat.map(({ name, message }, index) => (\n                        (<Card key={index} style={{ backgroundColor: 'rgba(9, 161, 245)', color: 'white', marginTop: 10 }}>\n                            <h3 style={{ padding: 10 }}>\n                                {name}: <span>{message}</span>\n                            </h3>\n                        </Card>\n                        )\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Chat;\n","import React from \"react\"\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport AuthService from \"./utils/auth\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport Home from './components/Home';\nimport NavDrawer from './components/NavDrawer';\nimport Profile from './components/Profile'\nimport UsersProfile from './components/UsersProfile'\nimport Dashboard from \"./components/Dashboard\";\nimport Chat from \"./components/Chat\";\n\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nclass App extends React.Component {\n  state = {\n    loggedInUser: null,\n  };\n\n  // theme = createMuiTheme({\n  //   palette: {\n  //     type: 'light',\n  //   }\n  // })\n\n  setCurrentUser = (user) => {\n    this.setState({\n      loggedInUser: user,\n    });\n  };\n\n  componentDidMount() {\n    if (this.state.loggedInUser === null) {\n      const authService = new AuthService();\n      authService.loggedin().then((response) => {\n        if (response.data._id) {\n          this.setCurrentUser(response.data);\n        } else {\n          localStorage.removeItem(\"loggedInUser\");\n        }\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <ThemeProvider theme={this.theme}> */}\n        <ToastContainer />\n        <NavDrawer loggedInUser={this.state.loggedInUser} setCurrentUser={this.setCurrentUser} />\n        <Switch>\n          <Route exact path=\"/dashboard\" render={\n            () => {\n              if (localStorage.getItem('loggedInUser')) {\n                return <Dashboard loggedInUser={localStorage.getItem('loggedInUser')} setCurrentUser={this.setCurrentUser} />\n              } else {\n                return <Redirect to='/' />\n              }\n            }\n          }\n          />\n          <Route path='/chat' render={\n            () => {\n              if (localStorage.getItem('loggedInUser')) {\n                return <Chat />\n              } else {\n                return <Redirect to='/' />\n              }\n            }\n          } />\n          <Route exact path=\"/profile\" render={\n            () => {\n              if (localStorage.getItem('loggedInUser')) {\n                return <Profile />\n              } else {\n                return <Redirect to='/' />\n              }\n            }\n          } />\n\n          <Route exact path=\"/profile/:id\" render={\n            () => {\n              if (localStorage.getItem('loggedInUser')) {\n                return <UsersProfile />\n              } else {\n                return <Redirect to='/' />\n              }\n            }\n          } />\n          <Route exact path=\"/\" render={\n            () => {\n              if (!localStorage.getItem('loggedInUser')) {\n                return <Home loggedInUser={localStorage.getItem('loggedInUser')} setCurrentUser={this.setCurrentUser} />\n              } else {\n                return <Redirect to=\"/dashboard\" />\n              }\n            }}\n          />\n        </Switch>\n        {/* </ThemeProvider> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css'\nReactDOM.render(\n  // <React.StrictMode>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}